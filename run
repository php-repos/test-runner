#!/usr/bin/env php
<?php

use PhpRepos\FileManager\Path;
use function PhpRepos\Cli\Output\line;
use function PhpRepos\FileManager\Directory\ls_recursively;
use function PhpRepos\FileManager\Resolver\root;

static $statistics = ['cases' => 0, 'success' => 0, 'failed' => 0];

$parameter = function(string $name, ?string $default = null): ?string
{
    $input = getopt('', [$name . '::']);

    if (count($input) === 0) {
        global $argv;

        // Search for the named parameter and extract its value
        $input = array_reduce($argv, function ($carry, $argument) use ($name) {
            return str_starts_with($argument, "--$name=")
                ? [$name => str_replace("--$name=", '', $argument)]
                : $carry;
        }, []);
    }

    return $input[$name] ?? $default;
};

$tests_directory = Path::from_string(root() . $parameter('directory', 'Tests'));

$filter = $parameter('filter', '');

ls_recursively($tests_directory)
    ->vertices()
    ->filter(fn (Path $file) => str_contains($file->string(), $filter) && str_ends_with($file, 'Test.php'))
    ->each(function (Path $test_file) {
        require $test_file->string();
    });

line(PHP_EOL . "cases: {$statistics['cases']}, success: {$statistics['success']}, failed: {$statistics['failed']}");

exit($statistics['failed']);
